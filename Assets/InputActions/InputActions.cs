//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.6.3
//     from Assets/InputActions/InputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputActions"",
    ""maps"": [
        {
            ""name"": ""Quiz"",
            ""id"": ""b367ded1-594a-4f60-a7c5-3c1aa9a7422e"",
            ""actions"": [
                {
                    ""name"": ""Answer1"",
                    ""type"": ""Button"",
                    ""id"": ""ecf77f68-2b06-464d-b669-32970e80871a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Answer2"",
                    ""type"": ""Button"",
                    ""id"": ""d88dbff7-250b-4db9-9d6a-f0e8d97037a8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Answer3"",
                    ""type"": ""Button"",
                    ""id"": ""39f05e20-bd5e-4073-9641-4becbdeee6de"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Answer4"",
                    ""type"": ""Button"",
                    ""id"": ""5e101298-20f2-440b-a2cc-1b3fcd87ed7f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""2129a886-c6d6-42eb-a8df-b9eaff2320d0"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Answer1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7fdd924f-f5e1-44e9-9f4b-4583de4dab03"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Answer1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""69b27bd6-84cd-41e0-a835-759aef1dd8a2"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Answer2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""07c1eab5-ec8a-4415-9635-6a0a26c670f2"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Answer2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6a968d5e-b9b5-4a89-abd7-01042c63ffc9"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Answer3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3f6359a0-55de-4e93-a067-241e9cc79ec3"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Answer3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""26d7ad73-6dfa-460a-9d05-8b4706d047dd"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Answer4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4b642a96-0113-4e86-bc55-ae2f0cc6a129"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Answer4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""BTBloc"",
            ""id"": ""4a91244f-32b3-4ddd-a377-17b914cb8a04"",
            ""actions"": [
                {
                    ""name"": ""GamePad"",
                    ""type"": ""Button"",
                    ""id"": ""3e22133a-c7b1-4a28-9e30-a79922fabf09"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Direction_North"",
                    ""type"": ""Button"",
                    ""id"": ""1130d9b3-ff7b-4afa-8d93-e37ae103bf8c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Keyboard"",
                    ""type"": ""Button"",
                    ""id"": ""4f98ee44-0461-4626-a1bc-d4832e4f0fd3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""J1"",
                    ""type"": ""Button"",
                    ""id"": ""88d323b7-0ec2-4c64-a107-f3410a016617"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""J1_North"",
                    ""type"": ""Button"",
                    ""id"": ""583dc5e0-db60-4868-9caa-1754c4fc51af"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""J2"",
                    ""type"": ""Button"",
                    ""id"": ""f74ae54f-56bc-42c2-9729-af006556ca1a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""J2_North"",
                    ""type"": ""Button"",
                    ""id"": ""9c11945a-c88c-4a19-bf3a-9d8f7e48fbfb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""J3"",
                    ""type"": ""Button"",
                    ""id"": ""8391070b-3743-48a3-9158-e4921006b3ae"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""J3_North"",
                    ""type"": ""Button"",
                    ""id"": ""dfafb229-12dd-45e0-9e45-137c96734956"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""J4"",
                    ""type"": ""Button"",
                    ""id"": ""30b7a0d1-dc21-45c5-b09c-0bf76e6575fb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""J4_North"",
                    ""type"": ""Button"",
                    ""id"": ""7c9cd6e2-60a6-4d08-b693-ac71ac9d3371"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""ba1c4263-091b-4c72-a2af-0558ccbe37e4"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Direction_North"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1d0ebc74-6574-42fb-8e80-4188e0e813c5"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""J1_North"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""21750fd8-4e44-4cf2-8dc2-e66e0ab4dcad"",
                    ""path"": ""<Keyboard>/t"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""J2_North"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""492fbe6c-265f-40d0-ac00-95ed9bd19d54"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""J3_North"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""19a5ed1b-2c81-4609-885c-106c28517de9"",
                    ""path"": ""<Keyboard>/8"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""J4_North"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""RocketRide"",
            ""id"": ""5a8bca08-4101-4219-b2ec-339a2bc59032"",
            ""actions"": [
                {
                    ""name"": ""OrientationGamepad"",
                    ""type"": ""Value"",
                    ""id"": ""7621689d-aa5d-467a-ae12-f7e24d94063e"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""PropulsionGamepad"",
                    ""type"": ""Button"",
                    ""id"": ""b0c8e794-7e1b-43d2-8e38-02abea5a7415"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TestKeyboard"",
                    ""type"": ""Button"",
                    ""id"": ""83e65af4-25a2-43df-8d7c-e9365ef3dd1d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TestGamepad"",
                    ""type"": ""Button"",
                    ""id"": ""38e49a93-65c5-4868-bb7c-a3c4c0f70c76"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""dc3234e0-6a45-43ce-b299-09dce94a594c"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OrientationGamepad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""df399114-1f73-4780-a119-ed984e8eac6e"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PropulsionGamepad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6522b5d3-bcf2-40c9-9484-58f7d51b538e"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TestKeyboard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9efa9eaa-940d-4962-8226-56be477dc2a2"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TestGamepad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Quiz
        m_Quiz = asset.FindActionMap("Quiz", throwIfNotFound: true);
        m_Quiz_Answer1 = m_Quiz.FindAction("Answer1", throwIfNotFound: true);
        m_Quiz_Answer2 = m_Quiz.FindAction("Answer2", throwIfNotFound: true);
        m_Quiz_Answer3 = m_Quiz.FindAction("Answer3", throwIfNotFound: true);
        m_Quiz_Answer4 = m_Quiz.FindAction("Answer4", throwIfNotFound: true);
        // BTBloc
        m_BTBloc = asset.FindActionMap("BTBloc", throwIfNotFound: true);
        m_BTBloc_GamePad = m_BTBloc.FindAction("GamePad", throwIfNotFound: true);
        m_BTBloc_Direction_North = m_BTBloc.FindAction("Direction_North", throwIfNotFound: true);
        m_BTBloc_Keyboard = m_BTBloc.FindAction("Keyboard", throwIfNotFound: true);
        m_BTBloc_J1 = m_BTBloc.FindAction("J1", throwIfNotFound: true);
        m_BTBloc_J1_North = m_BTBloc.FindAction("J1_North", throwIfNotFound: true);
        m_BTBloc_J2 = m_BTBloc.FindAction("J2", throwIfNotFound: true);
        m_BTBloc_J2_North = m_BTBloc.FindAction("J2_North", throwIfNotFound: true);
        m_BTBloc_J3 = m_BTBloc.FindAction("J3", throwIfNotFound: true);
        m_BTBloc_J3_North = m_BTBloc.FindAction("J3_North", throwIfNotFound: true);
        m_BTBloc_J4 = m_BTBloc.FindAction("J4", throwIfNotFound: true);
        m_BTBloc_J4_North = m_BTBloc.FindAction("J4_North", throwIfNotFound: true);
        // RocketRide
        m_RocketRide = asset.FindActionMap("RocketRide", throwIfNotFound: true);
        m_RocketRide_OrientationGamepad = m_RocketRide.FindAction("OrientationGamepad", throwIfNotFound: true);
        m_RocketRide_PropulsionGamepad = m_RocketRide.FindAction("PropulsionGamepad", throwIfNotFound: true);
        m_RocketRide_TestKeyboard = m_RocketRide.FindAction("TestKeyboard", throwIfNotFound: true);
        m_RocketRide_TestGamepad = m_RocketRide.FindAction("TestGamepad", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Quiz
    private readonly InputActionMap m_Quiz;
    private List<IQuizActions> m_QuizActionsCallbackInterfaces = new List<IQuizActions>();
    private readonly InputAction m_Quiz_Answer1;
    private readonly InputAction m_Quiz_Answer2;
    private readonly InputAction m_Quiz_Answer3;
    private readonly InputAction m_Quiz_Answer4;
    public struct QuizActions
    {
        private @InputActions m_Wrapper;
        public QuizActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Answer1 => m_Wrapper.m_Quiz_Answer1;
        public InputAction @Answer2 => m_Wrapper.m_Quiz_Answer2;
        public InputAction @Answer3 => m_Wrapper.m_Quiz_Answer3;
        public InputAction @Answer4 => m_Wrapper.m_Quiz_Answer4;
        public InputActionMap Get() { return m_Wrapper.m_Quiz; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(QuizActions set) { return set.Get(); }
        public void AddCallbacks(IQuizActions instance)
        {
            if (instance == null || m_Wrapper.m_QuizActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_QuizActionsCallbackInterfaces.Add(instance);
            @Answer1.started += instance.OnAnswer1;
            @Answer1.performed += instance.OnAnswer1;
            @Answer1.canceled += instance.OnAnswer1;
            @Answer2.started += instance.OnAnswer2;
            @Answer2.performed += instance.OnAnswer2;
            @Answer2.canceled += instance.OnAnswer2;
            @Answer3.started += instance.OnAnswer3;
            @Answer3.performed += instance.OnAnswer3;
            @Answer3.canceled += instance.OnAnswer3;
            @Answer4.started += instance.OnAnswer4;
            @Answer4.performed += instance.OnAnswer4;
            @Answer4.canceled += instance.OnAnswer4;
        }

        private void UnregisterCallbacks(IQuizActions instance)
        {
            @Answer1.started -= instance.OnAnswer1;
            @Answer1.performed -= instance.OnAnswer1;
            @Answer1.canceled -= instance.OnAnswer1;
            @Answer2.started -= instance.OnAnswer2;
            @Answer2.performed -= instance.OnAnswer2;
            @Answer2.canceled -= instance.OnAnswer2;
            @Answer3.started -= instance.OnAnswer3;
            @Answer3.performed -= instance.OnAnswer3;
            @Answer3.canceled -= instance.OnAnswer3;
            @Answer4.started -= instance.OnAnswer4;
            @Answer4.performed -= instance.OnAnswer4;
            @Answer4.canceled -= instance.OnAnswer4;
        }

        public void RemoveCallbacks(IQuizActions instance)
        {
            if (m_Wrapper.m_QuizActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IQuizActions instance)
        {
            foreach (var item in m_Wrapper.m_QuizActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_QuizActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public QuizActions @Quiz => new QuizActions(this);

    // BTBloc
    private readonly InputActionMap m_BTBloc;
    private List<IBTBlocActions> m_BTBlocActionsCallbackInterfaces = new List<IBTBlocActions>();
    private readonly InputAction m_BTBloc_GamePad;
    private readonly InputAction m_BTBloc_Direction_North;
    private readonly InputAction m_BTBloc_Keyboard;
    private readonly InputAction m_BTBloc_J1;
    private readonly InputAction m_BTBloc_J1_North;
    private readonly InputAction m_BTBloc_J2;
    private readonly InputAction m_BTBloc_J2_North;
    private readonly InputAction m_BTBloc_J3;
    private readonly InputAction m_BTBloc_J3_North;
    private readonly InputAction m_BTBloc_J4;
    private readonly InputAction m_BTBloc_J4_North;
    public struct BTBlocActions
    {
        private @InputActions m_Wrapper;
        public BTBlocActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @GamePad => m_Wrapper.m_BTBloc_GamePad;
        public InputAction @Direction_North => m_Wrapper.m_BTBloc_Direction_North;
        public InputAction @Keyboard => m_Wrapper.m_BTBloc_Keyboard;
        public InputAction @J1 => m_Wrapper.m_BTBloc_J1;
        public InputAction @J1_North => m_Wrapper.m_BTBloc_J1_North;
        public InputAction @J2 => m_Wrapper.m_BTBloc_J2;
        public InputAction @J2_North => m_Wrapper.m_BTBloc_J2_North;
        public InputAction @J3 => m_Wrapper.m_BTBloc_J3;
        public InputAction @J3_North => m_Wrapper.m_BTBloc_J3_North;
        public InputAction @J4 => m_Wrapper.m_BTBloc_J4;
        public InputAction @J4_North => m_Wrapper.m_BTBloc_J4_North;
        public InputActionMap Get() { return m_Wrapper.m_BTBloc; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(BTBlocActions set) { return set.Get(); }
        public void AddCallbacks(IBTBlocActions instance)
        {
            if (instance == null || m_Wrapper.m_BTBlocActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_BTBlocActionsCallbackInterfaces.Add(instance);
            @GamePad.started += instance.OnGamePad;
            @GamePad.performed += instance.OnGamePad;
            @GamePad.canceled += instance.OnGamePad;
            @Direction_North.started += instance.OnDirection_North;
            @Direction_North.performed += instance.OnDirection_North;
            @Direction_North.canceled += instance.OnDirection_North;
            @Keyboard.started += instance.OnKeyboard;
            @Keyboard.performed += instance.OnKeyboard;
            @Keyboard.canceled += instance.OnKeyboard;
            @J1.started += instance.OnJ1;
            @J1.performed += instance.OnJ1;
            @J1.canceled += instance.OnJ1;
            @J1_North.started += instance.OnJ1_North;
            @J1_North.performed += instance.OnJ1_North;
            @J1_North.canceled += instance.OnJ1_North;
            @J2.started += instance.OnJ2;
            @J2.performed += instance.OnJ2;
            @J2.canceled += instance.OnJ2;
            @J2_North.started += instance.OnJ2_North;
            @J2_North.performed += instance.OnJ2_North;
            @J2_North.canceled += instance.OnJ2_North;
            @J3.started += instance.OnJ3;
            @J3.performed += instance.OnJ3;
            @J3.canceled += instance.OnJ3;
            @J3_North.started += instance.OnJ3_North;
            @J3_North.performed += instance.OnJ3_North;
            @J3_North.canceled += instance.OnJ3_North;
            @J4.started += instance.OnJ4;
            @J4.performed += instance.OnJ4;
            @J4.canceled += instance.OnJ4;
            @J4_North.started += instance.OnJ4_North;
            @J4_North.performed += instance.OnJ4_North;
            @J4_North.canceled += instance.OnJ4_North;
        }

        private void UnregisterCallbacks(IBTBlocActions instance)
        {
            @GamePad.started -= instance.OnGamePad;
            @GamePad.performed -= instance.OnGamePad;
            @GamePad.canceled -= instance.OnGamePad;
            @Direction_North.started -= instance.OnDirection_North;
            @Direction_North.performed -= instance.OnDirection_North;
            @Direction_North.canceled -= instance.OnDirection_North;
            @Keyboard.started -= instance.OnKeyboard;
            @Keyboard.performed -= instance.OnKeyboard;
            @Keyboard.canceled -= instance.OnKeyboard;
            @J1.started -= instance.OnJ1;
            @J1.performed -= instance.OnJ1;
            @J1.canceled -= instance.OnJ1;
            @J1_North.started -= instance.OnJ1_North;
            @J1_North.performed -= instance.OnJ1_North;
            @J1_North.canceled -= instance.OnJ1_North;
            @J2.started -= instance.OnJ2;
            @J2.performed -= instance.OnJ2;
            @J2.canceled -= instance.OnJ2;
            @J2_North.started -= instance.OnJ2_North;
            @J2_North.performed -= instance.OnJ2_North;
            @J2_North.canceled -= instance.OnJ2_North;
            @J3.started -= instance.OnJ3;
            @J3.performed -= instance.OnJ3;
            @J3.canceled -= instance.OnJ3;
            @J3_North.started -= instance.OnJ3_North;
            @J3_North.performed -= instance.OnJ3_North;
            @J3_North.canceled -= instance.OnJ3_North;
            @J4.started -= instance.OnJ4;
            @J4.performed -= instance.OnJ4;
            @J4.canceled -= instance.OnJ4;
            @J4_North.started -= instance.OnJ4_North;
            @J4_North.performed -= instance.OnJ4_North;
            @J4_North.canceled -= instance.OnJ4_North;
        }

        public void RemoveCallbacks(IBTBlocActions instance)
        {
            if (m_Wrapper.m_BTBlocActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IBTBlocActions instance)
        {
            foreach (var item in m_Wrapper.m_BTBlocActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_BTBlocActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public BTBlocActions @BTBloc => new BTBlocActions(this);

    // RocketRide
    private readonly InputActionMap m_RocketRide;
    private List<IRocketRideActions> m_RocketRideActionsCallbackInterfaces = new List<IRocketRideActions>();
    private readonly InputAction m_RocketRide_OrientationGamepad;
    private readonly InputAction m_RocketRide_PropulsionGamepad;
    private readonly InputAction m_RocketRide_TestKeyboard;
    private readonly InputAction m_RocketRide_TestGamepad;
    public struct RocketRideActions
    {
        private @InputActions m_Wrapper;
        public RocketRideActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @OrientationGamepad => m_Wrapper.m_RocketRide_OrientationGamepad;
        public InputAction @PropulsionGamepad => m_Wrapper.m_RocketRide_PropulsionGamepad;
        public InputAction @TestKeyboard => m_Wrapper.m_RocketRide_TestKeyboard;
        public InputAction @TestGamepad => m_Wrapper.m_RocketRide_TestGamepad;
        public InputActionMap Get() { return m_Wrapper.m_RocketRide; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(RocketRideActions set) { return set.Get(); }
        public void AddCallbacks(IRocketRideActions instance)
        {
            if (instance == null || m_Wrapper.m_RocketRideActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_RocketRideActionsCallbackInterfaces.Add(instance);
            @OrientationGamepad.started += instance.OnOrientationGamepad;
            @OrientationGamepad.performed += instance.OnOrientationGamepad;
            @OrientationGamepad.canceled += instance.OnOrientationGamepad;
            @PropulsionGamepad.started += instance.OnPropulsionGamepad;
            @PropulsionGamepad.performed += instance.OnPropulsionGamepad;
            @PropulsionGamepad.canceled += instance.OnPropulsionGamepad;
            @TestKeyboard.started += instance.OnTestKeyboard;
            @TestKeyboard.performed += instance.OnTestKeyboard;
            @TestKeyboard.canceled += instance.OnTestKeyboard;
            @TestGamepad.started += instance.OnTestGamepad;
            @TestGamepad.performed += instance.OnTestGamepad;
            @TestGamepad.canceled += instance.OnTestGamepad;
        }

        private void UnregisterCallbacks(IRocketRideActions instance)
        {
            @OrientationGamepad.started -= instance.OnOrientationGamepad;
            @OrientationGamepad.performed -= instance.OnOrientationGamepad;
            @OrientationGamepad.canceled -= instance.OnOrientationGamepad;
            @PropulsionGamepad.started -= instance.OnPropulsionGamepad;
            @PropulsionGamepad.performed -= instance.OnPropulsionGamepad;
            @PropulsionGamepad.canceled -= instance.OnPropulsionGamepad;
            @TestKeyboard.started -= instance.OnTestKeyboard;
            @TestKeyboard.performed -= instance.OnTestKeyboard;
            @TestKeyboard.canceled -= instance.OnTestKeyboard;
            @TestGamepad.started -= instance.OnTestGamepad;
            @TestGamepad.performed -= instance.OnTestGamepad;
            @TestGamepad.canceled -= instance.OnTestGamepad;
        }

        public void RemoveCallbacks(IRocketRideActions instance)
        {
            if (m_Wrapper.m_RocketRideActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IRocketRideActions instance)
        {
            foreach (var item in m_Wrapper.m_RocketRideActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_RocketRideActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public RocketRideActions @RocketRide => new RocketRideActions(this);
    public interface IQuizActions
    {
        void OnAnswer1(InputAction.CallbackContext context);
        void OnAnswer2(InputAction.CallbackContext context);
        void OnAnswer3(InputAction.CallbackContext context);
        void OnAnswer4(InputAction.CallbackContext context);
    }
    public interface IBTBlocActions
    {
        void OnGamePad(InputAction.CallbackContext context);
        void OnDirection_North(InputAction.CallbackContext context);
        void OnKeyboard(InputAction.CallbackContext context);
        void OnJ1(InputAction.CallbackContext context);
        void OnJ1_North(InputAction.CallbackContext context);
        void OnJ2(InputAction.CallbackContext context);
        void OnJ2_North(InputAction.CallbackContext context);
        void OnJ3(InputAction.CallbackContext context);
        void OnJ3_North(InputAction.CallbackContext context);
        void OnJ4(InputAction.CallbackContext context);
        void OnJ4_North(InputAction.CallbackContext context);
    }
    public interface IRocketRideActions
    {
        void OnOrientationGamepad(InputAction.CallbackContext context);
        void OnPropulsionGamepad(InputAction.CallbackContext context);
        void OnTestKeyboard(InputAction.CallbackContext context);
        void OnTestGamepad(InputAction.CallbackContext context);
    }
}
